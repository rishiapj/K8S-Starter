trigger:
  branches:
    include:
      - main

variables:
- group: microservice-library

- name: awsRegion
  value: 'us-east-1'

- name: ecrUserServiceRepoName
  value: 'microservice/userservice'

- name: ecrProductServiceRepoName
  value: 'microservice/productservice'

- name: ecrClientRepoName
  value: 'microservice/client'

- name: imageTag
  value: 'latest'

- name: awsAccountId
  value: '985809756777'


stages:
  - stage: BuildAndPush
    jobs:
      - job: PushToECR
        pool:
          vmImage: 'ubuntu-latest'
        steps:

          # Use .NET SDK
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '7.0.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          # Restore and build .NET Core project
          - script: |
              echo "Restoring .NET for User Service project..."
              dotnet restore 'ui/ui.csproj'

              echo "Building .NET project..."
              dotnet build ui/ui.csproj --configuration Release
            displayName: 'Restore and Build .NET Core App'

         
          # Install AWS CLI and configure credentials
          - script: |
              echo "Installing unzip..."
              sudo apt-get update && sudo apt-get install -y unzip

              echo "Installing AWS CLI..."
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install

              echo "Configuring AWS credentials..."
              aws configure set aws_access_key_id $(awsAccessKeyId)
              aws configure set aws_secret_access_key $(awsSecretAccessKey)
              aws configure set default.region $(awsRegion)

              echo "Logging in to AWS ECR..."
              echo "The value of my variable is $awsAccessKeyId"
              echo "Access awsSecretAccessKey is $awsSecretAccessKey"

              aws ecr get-login-password --region $(awsRegion) | docker login --username AWS --password-stdin $(awsAccountId).dkr.ecr.$(awsRegion).amazonaws.com
            displayName: 'Install AWS CLI and Login to ECR'
            env:
              awsAccessKeyId: $(awsAccessKeyId)
              awsSecretAccessKey: $(awsSecretAccessKey)
          - script: ls -R
            displayName: 'List all files'

          # Build and push Docker image
          - task: Docker@2
            displayName: 'Build and Push Docker Image to AWS ECR'
            inputs:
              command: buildAndPush
              dockerfile: ./ui/Dockerfile
              repository: $(awsAccountId).dkr.ecr.$(awsRegion).amazonaws.com/$(ecrUserServiceRepoName)
              tags: |
                $(imageTag)


          - task: Docker@2
            displayName: 'Build and Push Docker Image to AWS ECR'
            inputs:
              command: buildAndPush
              dockerfile: ./ProductService/Dockerfile
              repository: $(awsAccountId).dkr.ecr.$(awsRegion).amazonaws.com/$(ecrProductServiceRepoName)
              tags: |
                $(imageTag)

          - task: Docker@2
            displayName: 'Build and Push Docker Image to AWS ECR'
            inputs:
              command: buildAndPush
              dockerfile: ./ui/Dockerfile
              repository: $(awsAccountId).dkr.ecr.$(awsRegion).amazonaws.com/$(ecrClientRepoName)
              tags: |
                $(imageTag)